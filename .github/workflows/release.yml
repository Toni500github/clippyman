name: Release

on:
  workflow_dispatch:
  push:
    tags: "*"
    paths:
      # trigger release workflow only if this file changed
      - .github/workflows/release.yml

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - id: version
        run: |
          echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "Tag name from github.ref_name: ${{ github.ref_name }}"
          echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v4

    - name: Install Packages
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update && sudo apt upgrade -y
        sudo apt-get install build-essential libwayland-dev libxcb1-dev g++-10 gettext pkg-config -y

    - name: Clean
      run: make distclean

    - name: Compile
      run: make DEBUG=0 CXX=x86_64-linux-gnu-g++-10 && mv ./build/release/clippyman ./

    - name: Upload to github artifacts
      uses: actions/upload-artifact@v4
      with:
        name: clippyman
        path: ./clippyman
        
  release:
    name: Create GitHub Release
    needs: [build, get-version]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      release-url: ${{ steps.create-release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create-release
      uses: ncipollo/release-action@v1.14.0
      with:
        tag: ${{ needs.get-version.outputs.version }}
        name: clippyman ${{ needs.get-version.outputs.version }}
        draft: false
        allowUpdates: true
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}

  upload-binaries:
    name: Upload binaries to Github relase
    runs-on: ubuntu-latest
    needs: [release, get-version]
    permissions:
      contents: write
    steps:
      - uses: actions/download-artifact@v4

      - name: tree that thing
        run: sudo apt install tree -y && tree

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release-url }}
          asset_path: clippyman/clippyman
          asset_name: clippyman-linux
          asset_content_type: application/x-pie-executable
